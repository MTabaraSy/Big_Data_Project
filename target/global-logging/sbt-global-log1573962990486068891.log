[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\TeiTei\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\TeiTei\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.2 (Oracle Corporation Java 1.8.0_211)
[debug]       Load.loadUnit: plugins took 252.1697ms
[debug]       Load.loadUnit: defsScala took 0.4267ms
[debug] [Loading] Scanning directory C:\Users\TeiTei\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\TeiTei\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 26.804 ms
[debug]           Load.resolveProject(global-plugins) took 74.4097ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\TeiTei\.sbt\1.0\plugins, plugins: List(<none>))) took 131.1269ms
[debug] [Loading] Done in C:\Users\TeiTei\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 159.1416ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3857ms
[debug]     Load.loadUnit(file:/C:/Users/TeiTei/.sbt/1.0/plugins/, ...) took 422.4001ms
[debug]   Load.apply: load took 637.2439ms
[debug]   Load.apply: resolveProjects took 7.9908ms
[debug]   Load.apply: finalTransforms took 68.9608ms
[debug]   Load.apply: config.delegates took 13.3869ms
[debug]   Load.apply: Def.make(settings)... took 591.0995ms
[debug]   Load.apply: structureIndex took 134.1839ms
[debug]   Load.apply: mkStreams took 2.0407ms
[info] loading global plugins from C:\Users\TeiTei\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 8108.2733ms
[debug]           Load.loadUnit: plugins took 68.1811ms
[debug]           Load.loadUnit: defsScala took 0.009ms
[debug] [Loading] Scanning directory C:\Users\TeiTei\Documents\M2BI-2022\Big_Data\ProjetBigData_V4\project
[debug]             Load.loadUnit: mkEval took 24.3884ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\TeiTei\Documents\M2BI-2022\Big_Data\ProjetBigData_V4\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.0839 ms
[info] loading settings for project projetbigdata_v4-build from idea.sbt ...
[debug]               Load.resolveProject(projetbigdata_v4-build) took 4.0258ms
[debug]             Load.loadTransitive: finalizeProject(Project(id projetbigdata_v4-build, base: C:\Users\TeiTei\Documents\M2BI-2022\Big_Data\ProjetBigData_V4\project, plugins: List(<none>))) took 7.8645ms
[debug] [Loading] Done in C:\Users\TeiTei\Documents\M2BI-2022\Big_Data\ProjetBigData_V4\project, returning: (projetbigdata_v4-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 5061.4673ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.5862ms
[debug]         Load.loadUnit(file:/C:/Users/TeiTei/Documents/M2BI-2022/Big_Data/ProjetBigData_V4/project/, ...) took 5138.2677ms
[debug]       Load.apply: load took 5140.5496ms
[debug]       Load.apply: resolveProjects took 0.1268ms
[debug]       Load.apply: finalTransforms took 13.6462ms
[debug]       Load.apply: config.delegates took 0.7395ms
[debug]       Load.apply: Def.make(settings)... took 137.5281ms
[debug]       Load.apply: structureIndex took 46.5086ms
[debug]       Load.apply: mkStreams took 0.0046ms
[info] loading project definition from C:\Users\TeiTei\Documents\M2BI-2022\Big_Data\ProjetBigData_V4\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 9250.8068ms
[debug]     Load.loadUnit: defsScala took 0.009ms
[debug] [Loading] Scanning directory C:\Users\TeiTei\Documents\M2BI-2022\Big_Data\ProjetBigData_V4
[debug]       Load.loadUnit: mkEval took 0.6134ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.2459 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 99.0188ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\TeiTei\Documents\M2BI-2022\Big_Data\ProjetBigData_V4, plugins: List(<none>))) took 107.2123ms
[debug] [Loading] Done in C:\Users\TeiTei\Documents\M2BI-2022\Big_Data\ProjetBigData_V4, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 7150.9555ms
[debug]     Load.loadUnit: cleanEvalClasses took 53.899ms
[debug]   Load.loadUnit(file:/C:/Users/TeiTei/Documents/M2BI-2022/Big_Data/ProjetBigData_V4/, ...) took 16457.923ms
[debug] Load.apply: load took 16461.1923ms
[debug] Load.apply: resolveProjects took 0.256ms
[debug] Load.apply: finalTransforms took 65.1237ms
[debug] Load.apply: config.delegates took 0.6893ms
[debug] Load.apply: Def.make(settings)... took 175.1226ms
[debug] Load.apply: structureIndex took 57.901ms
[debug] Load.apply: mkStreams took 0.027ms
[info] set current project to ProjetBigData_V4 (in build file:/C:/Users/TeiTei/Documents/M2BI-2022/Big_Data/ProjetBigData_V4/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 49921 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 49921, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to ProjetBigData_V4 (in build file:/C:/Users/TeiTei/Documents/M2BI-2022/Big_Data/ProjetBigData_V4/)
[debug] > Exec(idea-shell, None, None)
